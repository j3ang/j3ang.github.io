[{"posts":[{"id":17,"date":"2021-01-09T06:50:55","date_gmt":"2021-01-09T06:50:55","guid":{"rendered":"http://localhost:3080/?p=17"},"modified":"2021-01-09T19:08:05","modified_gmt":"2021-01-09T19:08:05","slug":"concatenating-row-values-by-groups","status":"publish","type":"post","link":"http://localhost:3080/concatenating-row-values-by-groups/","title":{"rendered":"Concatenating row values by groups"},"content":{"rendered":"<p><img src=\"https://j3ang-uploads.storage.googleapis.com/wp-content/uploads/2021/01/09190524/post-17-5ff9fe5c0dd16.png\" alt=\"usecase_1\" /></p>\n<p>TASK USECASES: </p>\n<ol>\n<li>Empty values created due to large chunk of description </li>\n<li>Grouping multiple intersts</li>\n</ol>\n<p>Query User Intersts</p>\n<pre><code>SELECT\n    u.user_email AS &#039;Email&#039;,\n    u.display_name,\n    SUBSTRING_INDEX(u.display_name, &#039; &#039;, 1) AS &#039;First&#039;,\n    SUBSTRING_INDEX(u.display_name, &#039; &#039;, -1) AS &#039;Last&#039;,\n    wp.post_title AS &#039;Company&#039;,\n    mp.meta_value AS &#039;Job Title&#039;,\n    a.name AS &#039;Interets&#039;\nFROM \n    (SELECT id, name\n    FROM posts_terms_authors\n    WHERE posts_terms_authors.taxonomy=&#039;category&#039; ) AS a\nLEFT JOIN \n    (SELECT id, name\n    FROM posts_terms_authors\n    WHERE posts_terms_authors.taxonomy=&#039;author&#039;) AS b\n    ON a.id = b.id\nLEFT JOIN wp_users u ON u.user_login = b.name\nLEFT JOIN wp_usermeta mp ON u.id = mp.user_id\nLEFT JOIN wp_usermeta mc ON u.id = mc.user_id\nLEFT JOIN wp_posts wp ON wp.ID = mc.meta_value\nWHERE mp.meta_key LIKE &#039;position&#039;\n  AND mc.meta_key LIKE &#039;company&#039;;</code></pre>\n<p>Concatenating user intersts</p>\n<pre><code>CREATE OR REPLACE VIEW user_intersts_grouped AS\nSELECT Email,First,Last,\n       Company,&#039;Job Title&#039;,  \n       group_concat( distinct intersts) AS &#039;Intersts&#039; \nFRROM user_intersts\nGROUP BY Email,First,Last,Company, Job Title;</code></pre>\n<p>Get users with no interests</p>\n<pre><code>SELECT * FROM wp_users U \nWHERE U.ID NOT IN (\n    SELECT ID FROM wp_users a\n    JOIN user_intersts_grouped b \n    ON a.user_email = b.Email)</code></pre>\n<p>Check total number of records</p>\n<pre><code>SELECT count(*) FROM ( \n    SELECT u.ID, u.user_email AS &#039;Email&#039;,\n       u.display_name,\n       SUBSTRING_INDEX(u.display_name, &#039; &#039;, 1) AS &#039;First&#039;,\n       SUBSTRING_INDEX(u.display_name, &#039; &#039;, -1) AS &#039;Last&#039;,\n       wp.post_title AS &#039;Company&#039;,\n       mp.meta_value AS &#039;Job Title&#039;\n    FROM  wp_users u\n    LEFT JOIN wp_usermeta mp ON u.id = mp.user_id\n    LEFT JOIN wp_usermeta mc ON u.id = mc.user_id\n    LEFT JOIN wp_posts wp ON wp.ID = mc.meta_value\n    WHERE mp.meta_key like &#039;position&#039; and mc.meta_key like &#039;company&#039;\n    AND u.ID NOT IN (SELECT ID FROM wp_users a\n    JOIN user_intersts_grouped b ON a.user_email = b.Email)) T;</code></pre>\n<p>Create view from final table</p>\n<pre><code>CREATE OR REPLACE VIEW users_with_no_interetsts AS\nSELECT u.user_email AS &#039;Email&#039;,\n       SUBSTRING_INDEX(u.display_name, &#039; &#039;, 1) AS &#039;First&#039;,\n       SUBSTRING_INDEX(u.display_name, &#039; &#039;, -1) AS &#039;Last&#039;,\n       wp.post_title AS &#039;Company&#039;,\n       mp.meta_value AS &#039;Job Title&#039;\nFROM  wp_users u\nLEFT JOIN wp_usermeta mp ON u.id = mp.user_id\nLEFT JOIN wp_usermeta mc ON u.id = mc.user_id\nLEFT JOIN wp_posts wp ON wp.ID = mc.meta_value\nWHERE mp.meta_key like &#039;position&#039; and mc.meta_key like &#039;company&#039;\nAND u.ID NOT IN (SELECT ID FROM wp_users a\nJOIN user_interests_grouped b ON a.user_email = b.Email)</code></pre>\n<p>Switched to user and select all the categories  categories:</p>\n<pre><code>a:10:{\ni:0;s:2:&quot;56&quot;;\ni:1;s:2:&quot;24&quot;;\ni:2;s:2:&quot;43&quot;;\ni:3;s:2:&quot;23&quot;;\ni:4;s:2:&quot;40&quot;;\ni:5;s:2:&quot;37&quot;;\ni:6;s:2:&quot;52&quot;;\ni:7;s:3:&quot;185&quot;;\ni:8;s:2:&quot;54&quot;;\ni:9;s:2:&quot;38&quot;;}</code></pre>\n<pre><code>CREATE OR REPLACE VIEW categories AS\nSELECT * FROM wp_terms WHERE term_id IN (56,24,43,23,40,37,52,185,54,38)\nORDER BY name;</code></pre>\n<p>Finally populating user interests<br />\n(in case views got deleted or not exist on staging/prod, the injection query will use the full sub query. )</p>\n<pre><code>global $wpdb;\n$sql=&quot;select t.ID, GROUP_CONCAT(DISTINCT catagory) AS &#039;Interests&#039; FROM( SELECT u.ID, c.term_id AS catagory FROM ( select u.user_email as &#039;Email&#039;, u.display_name, SUBSTRING_INDEX(u.display_name, &#039; &#039;, 1) as &#039;First&#039;, SUBSTRING_INDEX(u.display_name, &#039; &#039;, -1) as &#039;Last&#039;, wp.post_title as &#039;Company&#039;, mp.meta_value as &#039;Job Title&#039;, a.name as &#039;Interets&#039; from ( select id, name from posts_terms_authors where posts_terms_authors.taxonomy=&#039;category&#039;) as a left join (select id, name from posts_terms_authors where posts_terms_authors.taxonomy=&#039;author&#039;) as b on a.id = b.id left join wp_users u on u.user_login = b.name left join wp_usermeta mp on u.id = mp.user_id left join wp_usermeta mc on u.id = mc.user_id left join wp_posts wp on wp.ID = mc.meta_value where mp.meta_key like &#039;position&#039; and mc.meta_key like &#039;company&#039; and a.name !=&#039;Uncategorized&#039; ) i JOIN categories c ON i.Interets = c.name LEFT JOIN wp_users u ON u.display_name = i.display_name ) t GROUP BY t.ID;&quot;;\n$results = $wpdb-&gt;get_results($sql);\n\nforeach ( $results as $result ) {\n    update_user_meta( $result-&gt;ID, &#039;profile_interests&#039;, explode(&#039;,&#039;, $result-&gt;Interests) );\n}</code></pre>\n<p>It's probably better to convert to procedure...</p>\n","protected":false},"excerpt":{"rendered":"<p>TASK USECASES: Empty values created due to large chunk of description Grouping multiple intersts Query User Intersts SELECT u.user_email AS &#039;Email&#039;, u.display_name, SUBSTRING_INDEX(u.display_name, &#039; &#039;, 1) AS &#039;First&#039;, SUBSTRING_INDEX(u.display_name, &#039; &#039;, -1) AS &#039;Last&#039;, wp.post_title AS &#039;Company&#039;, mp.meta_value AS &#039;Job Title&#039;, a.name AS &#039;Interets&#039; FROM (SELECT id, name FROM posts_terms_authors WHERE posts_terms_authors.taxonomy=&#039;category&#039; ) AS a [&hellip;]</p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[9],"tags":[12,10],"_links":{"self":[{"href":"http://localhost:3080/wp-json/wp/v2/posts/17"}],"collection":[{"href":"http://localhost:3080/wp-json/wp/v2/posts"}],"about":[{"href":"http://localhost:3080/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"http://localhost:3080/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"http://localhost:3080/wp-json/wp/v2/comments?post=17"}],"version-history":[{"count":5,"href":"http://localhost:3080/wp-json/wp/v2/posts/17/revisions"}],"predecessor-version":[{"id":33,"href":"http://localhost:3080/wp-json/wp/v2/posts/17/revisions/33"}],"wp:attachment":[{"href":"http://localhost:3080/wp-json/wp/v2/media?parent=17"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"http://localhost:3080/wp-json/wp/v2/categories?post=17"},{"taxonomy":"post_tag","embeddable":true,"href":"http://localhost:3080/wp-json/wp/v2/tags?post=17"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":14,"date":"2021-01-09T06:47:10","date_gmt":"2021-01-09T06:47:10","guid":{"rendered":"http://localhost:3080/?p=14"},"modified":"2021-01-09T19:09:04","modified_gmt":"2021-01-09T19:09:04","slug":"sql-window-function-running-total","status":"publish","type":"post","link":"http://localhost:3080/sql-window-function-running-total/","title":{"rendered":"SQL window function / running total"},"content":{"rendered":"<p>This is a inner join.<br />\nWe will need to add two conditions.<br />\none to get each day record and all next days records.</p>\n<p><!--more--></p>\n<pre><code>DROP TABLE IF EXISTS `nytimes_covid_counties_day_seq`;\n\nCREATE TABLE `nytimes_covid_counties_day_seq`\nAS\nSELECT a.state, a.`date`, a.cases, COUNT(*) seq\n  FROM nytimes_covid_states a, nytimes_covid_states b\n WHERE a.state = b.state\n   AND a.`date` &gt;= b.`date`\n GROUP BY a.state, a.`date`, a.cases</code></pre>\n<p>Another way of doing this is using the window functions.</p>\n<pre><code>DROP TABLE IF EXISTS `nytimes_covid_states_day_seq`;\nCREATE TABLE `nytimes_covid_states_day_seq`\nAS\nSELECT *, RANK() OVER( PARTITION BY `state` ORDER BY `date`) AS seq\nFROM `nytimes_covid_states`;</code></pre>\n<p><img src=\"https://j3ang-uploads.storage.googleapis.com/wp-content/uploads/2021/01/09190522/post-14-5ff9fe379063a.png\" alt=\"window_sql_output\" /></p>\n","protected":false},"excerpt":{"rendered":"<p>This is a inner join. We will need to add two conditions. one to get each day record and all next days records.</p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[9],"tags":[11,10],"_links":{"self":[{"href":"http://localhost:3080/wp-json/wp/v2/posts/14"}],"collection":[{"href":"http://localhost:3080/wp-json/wp/v2/posts"}],"about":[{"href":"http://localhost:3080/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"http://localhost:3080/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"http://localhost:3080/wp-json/wp/v2/comments?post=14"}],"version-history":[{"count":4,"href":"http://localhost:3080/wp-json/wp/v2/posts/14/revisions"}],"predecessor-version":[{"id":34,"href":"http://localhost:3080/wp-json/wp/v2/posts/14/revisions/34"}],"wp:attachment":[{"href":"http://localhost:3080/wp-json/wp/v2/media?parent=14"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"http://localhost:3080/wp-json/wp/v2/categories?post=14"},{"taxonomy":"post_tag","embeddable":true,"href":"http://localhost:3080/wp-json/wp/v2/tags?post=14"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":12,"date":"2021-01-09T06:45:01","date_gmt":"2021-01-09T06:45:01","guid":{"rendered":"http://localhost:3080/?p=12"},"modified":"2021-01-09T06:45:01","modified_gmt":"2021-01-09T06:45:01","slug":"basic-beatifulsoup-crawler","status":"publish","type":"post","link":"http://localhost:3080/basic-beatifulsoup-crawler/","title":{"rendered":"Basic BeatifulSoup Crawler"},"content":{"rendered":"<p>The media of this site were moved to the Amazon S3 bucket. Forestry implemented Amazon S3, but it doesn't allow migration at this point. </p>\n<p><!--more-->It was pain to replace all the image links to each file. Without dive into the S3 JavaScript SDK, a simple pyhton crawler can make the process easier.<br />\n---</p>\n<pre><code class=\"python\">\n##### Import library #####\nfrom bs4 import BeautifulSoup\n##### Prepare Data #####\nhtml = \"\"\"<paste html here>\"\"\" #Inspect and extract the table element in which all the object are contained in the S3 folder\nsoup = BeautifulSoup(html, \"html.parser\") # Parse the html to soup\nimgs = soup.find_all(\"a\",{'class':'list-view-item-name'}) # Find all a tags that has a specific class\n##### Print Data #####\nprint('images:')\nfor img in imgs: # Print all the object in the assigned folder above\n    print(\"- \" + public_path + project_path + \"/\"+ img.text.strip())  # The objects needs to be publicly accessiable \n</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>The media of this site were moved to the Amazon S3 bucket. Forestry implemented Amazon S3, but it doesn&#8217;t allow migration at this point.</p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[1],"tags":[6,7,8],"_links":{"self":[{"href":"http://localhost:3080/wp-json/wp/v2/posts/12"}],"collection":[{"href":"http://localhost:3080/wp-json/wp/v2/posts"}],"about":[{"href":"http://localhost:3080/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"http://localhost:3080/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"http://localhost:3080/wp-json/wp/v2/comments?post=12"}],"version-history":[{"count":1,"href":"http://localhost:3080/wp-json/wp/v2/posts/12/revisions"}],"predecessor-version":[{"id":13,"href":"http://localhost:3080/wp-json/wp/v2/posts/12/revisions/13"}],"wp:attachment":[{"href":"http://localhost:3080/wp-json/wp/v2/media?parent=12"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"http://localhost:3080/wp-json/wp/v2/categories?post=12"},{"taxonomy":"post_tag","embeddable":true,"href":"http://localhost:3080/wp-json/wp/v2/tags?post=12"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":7,"date":"2021-01-09T05:05:58","date_gmt":"2021-01-09T05:05:58","guid":{"rendered":"http://localhost:3080/?p=7"},"modified":"2021-01-09T15:40:06","modified_gmt":"2021-01-09T15:40:06","slug":"how-to-setup-pentaho-on-macos-catalina","status":"publish","type":"post","link":"http://localhost:3080/how-to-setup-pentaho-on-macos-catalina/","title":{"rendered":"How to setup Pentaho on MacOS Catalina"},"content":{"rendered":"<p>I've struggled several hours trying to figure out how to get the pentaho data integration app running on my macOS Catalina 10.15.2.</p>\n<p><!--more--></p>\n<p>When I ran spoon.sh or spoon.command in the terminal, the interface will eventually show up for a second but then will crash immediately.  </p>\n<p><img src=\"https://j3ang-uploads.storage.googleapis.com/wp-content/uploads/2021/01/09153631/post-7-5ff9c977cb9e5.png\" alt=\"pentaho-runtime-error\" /></p>\n<p>I was finally able to get it to run with <a href=\"http://blog.cloud-mes.com/2019/05/30/install-pentaho-data-integration-on-macos-10-dot-14-dot-5-mojave/\">Eris</a>'s method. It's seems that we need to tell Pentaho application specifically where java is located. So starting over, my final steps are: </p>\n<hr />\n<h2>1. Install Pentaho</h2>\n<pre><code>○ → brew cask install data-integration\n\n==\\&gt; Downloading https://downloads.sourceforge.net/pentaho/pdi-ce-8.3.0.0-371.zip\n==\\&gt; Downloading from https://versaweb.dl.sourceforge.net/project/pentaho/Pentaho\n###### \\################################################################## 100.0%\n==\\&gt; Verifying SHA-256 checksum for Cask &#039;data-integration&#039;.\n==\\&gt; Installing Cask data-integration\n==\\&gt; Moving App &#039;Data Integration.app&#039; to &#039;/Applications/Data Integration.app&#039;.\n🍺  data-integration was successfully installed!</code></pre>\n<p>The .app file will be moved to the application folder when using brew cask install.</p>\n<pre><code>## To find out where the folder is located:\n○ → brew cask info data-integration\n\ndata-integration: 8.3.0.0-371\nhttps://community.hitachivantara.com/community/products-and-solutions/pentaho/\n/usr/local/Caskroom/data-integration/8.3.0.0-371 (2,182 files, 1.2GB)  ##  \\&lt; -------- pentaho folder here\nFrom: https://github.com/Homebrew/homebrew-cask/blob/master/Casks/data-integration.rb\n==\\&gt; Name\nPentaho Data Integration\n==\\&gt; Artifacts\ndata-integration/Data Integration.app (App)</code></pre>\n<h2>2. Install Java</h2>\n<pre><code>brew tap adoptopenjdk/openjdk\nbrew cask install adoptopenjdk8</code></pre>\n<h2>3. Modify JavaApplicationStub</h2>\n<pre><code>cd &quot;/Applications/Data Integration.app/Contents/MacOS&quot;\nnano JavaApplicationStub</code></pre>\n<p>Replace the content with following:</p>\n<pre><code># !/bin/sh\n\n# PROG\\_DIR=$(cd &quot;$(dirname &quot;$0&quot;)&quot;; pwd)\n\n# PROG\\_DIR is in .app/Contents/MacOS\n\n# BASE\\_DIR=&quot;$PROG\\_DIR&quot;/../../../\nBASE\\_DIR=&quot;/usr/local/Caskroom/data-integration/8.3.0.0-371/data-integration&quot;\ncd &quot;$BASE\\_DIR&quot;\necho $BASE\\_DIR\n. &quot;spoon.command&quot; &quot;$BASE\\_DIR&quot;</code></pre>\n<h2>4. Setup correct pentaho env in spoon.sh</h2>\n<pre><code>cd /usr/local/Caskroom/data-integration/8.3.0.0-371/data-integration \nnano ./spoon.sh</code></pre>\n<pre><code># . &quot;$BASEDIR/set-pentaho-env.sh&quot;\n# setPentahoEnv\n# Comment out above 2 line and add below 2 line\n\\_PENTAHO\\_JAVA\\_HOME=&quot;/Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home/&quot;\n\\_PENTAHO\\_JAVA=&quot;/Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home/bin/java&quot;</code></pre>\n<h2>5. Run Data Integration app or spoon.sh</h2>\n<p>:rainbow:<br />\n<img src=\"https://j3ang-uploads.storage.googleapis.com/wp-content/uploads/2021/01/09153759/post-7-5ff9c97cd4f90.png\" alt=\"succuss\" /><br />\nNo more strange errors! :v::v::v:<br />\n<img src=\"https://j3ang-uploads.storage.googleapis.com/wp-content/uploads/2021/01/09153803/post-7-5ff9c98307f90.png\" alt=\"succsess\" /></p>\n<hr />\n","protected":false},"excerpt":{"rendered":"<p>I&#8217;ve struggled several hours trying to figure out how to get the pentaho data integration app running on my macOS Catalina 10.15.2.</p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[1],"tags":[4,3,2,5],"_links":{"self":[{"href":"http://localhost:3080/wp-json/wp/v2/posts/7"}],"collection":[{"href":"http://localhost:3080/wp-json/wp/v2/posts"}],"about":[{"href":"http://localhost:3080/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"http://localhost:3080/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"http://localhost:3080/wp-json/wp/v2/comments?post=7"}],"version-history":[{"count":6,"href":"http://localhost:3080/wp-json/wp/v2/posts/7/revisions"}],"predecessor-version":[{"id":25,"href":"http://localhost:3080/wp-json/wp/v2/posts/7/revisions/25"}],"wp:attachment":[{"href":"http://localhost:3080/wp-json/wp/v2/media?parent=7"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"http://localhost:3080/wp-json/wp/v2/categories?post=7"},{"taxonomy":"post_tag","embeddable":true,"href":"http://localhost:3080/wp-json/wp/v2/tags?post=7"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}}]}]